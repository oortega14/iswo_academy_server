services:
  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
    restart: unless-stopped

  api:
    build: 
      context: .
      dockerfile: docker/Dockerfile.prod
      args:
        RUBY_VERSION: '3.3.6'
    environment:
      - RAILS_ENV=production
      - RAILS_SERVE_STATIC_FILES=false
      - RAILS_LOG_TO_STDOUT=true
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=iswo_academy_production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - FRONT_URL=${FRONT_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET=${AWS_BUCKET}
      - AWS_REGION=${AWS_REGION}
    expose:
      - "3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/rails:cached
      - rails_tmp:/rails/tmp
      - rails_log:/rails/log
    command: "bundle exec puma -C config/puma.rb"
    restart: unless-stopped

  db:
    image: postgres:16
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=iswo_academy_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  rails_tmp:
  rails_log:

networks:
  default:
    external:
      name: academy-network
